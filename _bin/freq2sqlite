#!/usr/bin/php -d memory_limit=8G
<?php
declare(strict_types=1);
require_once __DIR__.'/../_inc/lib.php';

$db_file = $argv[1] ?? 'out.sqlite';
$db = new \TDC\PDO\SQLite($db_file);

$db->exec("PRAGMA journal_mode = delete");
$db->exec("PRAGMA page_size = 65536");
$db->exec("VACUUM");

$db->exec("PRAGMA auto_vacuum = INCREMENTAL");
$db->exec("PRAGMA case_sensitive_like = ON");
$db->exec("PRAGMA foreign_keys = OFF");
$db->exec("PRAGMA ignore_check_constraints = ON");
$db->exec("PRAGMA journal_mode = MEMORY");
$db->exec("PRAGMA locking_mode = NORMAL");
$db->exec("PRAGMA synchronous = OFF");
$db->exec("PRAGMA threads = 4");
$db->exec("PRAGMA trusted_schema = OFF");

$db->exec("CREATE TABLE meta (
	key TEXT NOT NULL,
	value TEXT NOT NULL,
	PRIMARY KEY (key)
)");
$db->exec("CREATE TABLE freqs (
	freq_text TEXT NOT NULL,
	freq_abs INTEGER NOT NULL,
	PRIMARY KEY (freq_text)
)");

$db->beginTransaction();
$ins = $db->prepare("INSERT INTO freqs (freq_text, freq_abs) VALUES (?, ?) ON CONFLICT(freq_text) DO UPDATE SET freq_abs = freq_abs + ?");

$total = 0;
for ($i=1 ; $line = fgets(STDIN) ; ++$i) {
	$f = explode("\t", trim($line));
	$rel = intval(array_pop($f));
	$abs = intval(array_pop($f));
	$total += $abs;
	$f = implode("\t", $f);
	$ins->execute([$f, $abs, $abs]);

	if ($i % 10000 == 0) {
		$db->commit();
		$db->beginTransaction();
	}
}

$db->commit();
$db->exec("PRAGMA ignore_check_constraints = OFF");
$db->exec("CREATE INDEX index_freq_abs ON freqs (freq_abs ASC)");
$db->prepexec("INSERT INTO meta (key, value) VALUES (?, ?)", ['total', $total]);
$db->exec("VACUUM");
